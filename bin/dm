#!/usr/bin/env node
'use strict';

const program = require('commander');
const updaterNotifier = require('update-notifier');
const spawn = require('cross-spawn');
const path = require('path');
const apidoc = require('apidoc');
const exists = require('fs').existsSync;
const pkg = require('../package.json');

const printLogo = () => {};

updaterNotifier({
    pkg,
    updateCheckInterval: 0,
}).notify({ defer: true });

program.version(pkg.version).action(function() {
    console.log('');
    console.log('Examples:');
    console.log('');
    console.log('  $ deploy exec sequential');
    console.log('  $ deploy exec async');
});

program
    .command('server [env]')
    .alias('s')
    .description('Start server')
    .option('-t, --target [mode]', 'Specify service directory')
    .option('-w, --watchTarget [e]', 'Specify service directory')
    .option('-o, --open', 'Service starts, open the default browser')
    .option('-p, --port', 'Set server port')
    .action(function(env, options) {
        var target = options.target ? path.join(process.cwd(), options.target) : '/';
        console.log('server start for %s , auto open %s', target, !!options.open);

        require('../lib/server').default({
            open: !!options.open,
            port: parseInt(options.port, 10),
            version: pkg.version,
            target: target,
            ...(options.watchTarget ? { watchTarget: path.resolve(__dirname, options.watchTarget) } : {}),
        });
    });

program
    .command('doc [cmd]')
    .alias('d')
    .description('Create api doc')
    .option('-t, --target <mode>', 'Target directory')
    .option('-d, --dist <mode>', 'Target directory')
    .action(function(cmd, options) {
        console.log('exec "%s" using %s mode', cmd, options.exec_mode);

        const docPath = options.target ? path.join(process.cwd(), options.target) : process.cwd();

        apidoc.createDoc({
            src: docPath,
            dest: options.dest ? path.join(process.cwd(), options.dest) : path.join(docPath, './DM-DOC'),
        });
    })
    .on('--help', function() {
        console.log('');
        console.log('Examples:');
        console.log('');
        console.log('  $ dm doc  ');
    });

program.command('*').action(function(env) {
    console.log('deploying "%s"', env);
});

if (!process.argv.slice(2).length) {
    program.outputHelp();
}

program.parse(process.argv);
